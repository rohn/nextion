{"version":3,"sources":["../src/util.js"],"names":["MAX_INT","toHex","_","pipe","num","toString","padCharsStart","isValidPort","allPass","isObject","property","isFunction","isUnsignedInteger","isNumber","isFinite","isInteger","gte","lte"],"mappings":";;;;;AAAA;;;;;;AAEA;;;;;AAKO,MAAMA,4BAAU,UAAhB;;AAEP;;;;;;;AAOO,MAAMC,wBAAQC,aAAEC,IAAF,CAAOC,OAAOA,IAAIC,QAAJ,CAAa,EAAb,CAAd,EAAgCH,aAAEI,aAAF,CAAgB,KAAhB,EAAuB,CAAvB,CAAhC,CAAd;;AAEP;;;;;;;AAOO,MAAMC,oCAAcL,aAAEM,OAAF,CAAU,CACnCN,aAAEO,QADiC,EAEnCP,aAAEC,IAAF,CAAOD,aAAEQ,QAAF,CAAW,IAAX,CAAP,EAAyBR,aAAES,UAA3B,CAFmC,EAGnCT,aAAEC,IAAF,CAAOD,aAAEQ,QAAF,CAAW,OAAX,CAAP,EAA4BR,aAAES,UAA9B,CAHmC,EAInCT,aAAEC,IAAF,CAAOD,aAAEQ,QAAF,CAAW,OAAX,CAAP,EAA4BR,aAAES,UAA9B,CAJmC,CAAV,CAApB;;AAOP;;;;;;AAMO,MAAMC,gDAAoBV,aAAEM,OAAF,CAAU,CACzCN,aAAEW,QADuC,EAEzCX,aAAEY,QAFuC,EAGzCZ,aAAEa,SAHuC,EAIzCb,aAAEc,GAAF,CAAMd,YAAN,EAAS,CAAT,CAJyC,EAKzCA,aAAEe,GAAF,CAAMf,YAAN,EAASF,OAAT,CALyC,CAAV,CAA1B","file":"util.js","sourcesContent":["import _ from 'lodash/fp';\n\n/**\n * Largest unsigned integer Nextion can handle (I think)\n * @type {number}\n * @private\n */\nexport const MAX_INT = 4294967295;\n\n/**\n * Converts decimal to a string hexadecimal representation beginning with `0x`.\n * @param {number} num - Number to convert\n * @type {Function}\n * @private\n * @returns {string} Hexadecimal representation of number\n */\nexport const toHex = _.pipe(num => num.toString(16), _.padCharsStart('0x0', 4));\n\n/**\n * Returns `true` if `value` quacks like a {@link Serialport} object.\n * @type {Function}\n * @param {*} value - Value to test\n * @private\n * @returns {boolean} Result\n */\nexport const isValidPort = _.allPass([\n  _.isObject,\n  _.pipe(_.property('on'), _.isFunction),\n  _.pipe(_.property('write'), _.isFunction),\n  _.pipe(_.property('drain'), _.isFunction)\n]);\n\n/**\n * Returns `true` if unsigned integer and <= 4294967295.\n * @param {*} value - Value to test\n * @private\n * @returns {boolean} Result\n */\nexport const isUnsignedInteger = _.allPass([\n  _.isNumber,\n  _.isFinite,\n  _.isInteger,\n  _.gte(_, 0),\n  _.lte(_, MAX_INT)\n]);\n"]}